version: '3'

services:

    #
    #   Systems
    #
    #   These are the containers for the main part of the application/system.
    #
    #   A good way of starting the service is to first start the Broker/Queue/Kafka,
    #       then the Source and Store and lastly the Message function
    #
    #
    #   $ docker-compose up -d zookeeper kafka
    #   $ docker-compose up -d source store server client
    #   $ docker-compose up -d messages-store
    #
    #
    #   Dependent services will be started automatically, like databases and image servers
    #

    source:
        container_name: althingi-source
        image: einarvalur/althingi-source:latest
        labels:
            - althingi_service=source
        restart: on-failure
        environment:
            - DB_HOST=source-db
            - DB_PORT=3306
            - DB_NAME=althingi
            - DB_USER=root
            - DB_PASSWORD=example
            - LOG_PATH=php://stdout
            - BROKER=kafka
            - BROKER_HOST=kafka:9092
            - QUEUE_FORCED=false
            # - DOCUMENT_SERVER=
            # - DOCUMENT_DEFINITION=
            # - INDEXER_STALL_TIME=
        networks:
            - main-althingi-networks
        depends_on:
            - source-db
        logging:
            driver: "json-file"
            options:
                max-size: "200k"
                max-file: "5"

    source-db:
        container_name: althingi-source-db
        image: einarvalur/althingi-source-db:latest
        volumes:
            - source-db-volume:/var/lib/mysql
        command: --default-authentication-plugin=mysql_native_password
        restart: always
        networks:
            - main-althingi-networks
        environment:
            MYSQL_ROOT_PASSWORD: example
        logging:
            driver: "json-file"
            options:
                max-size: "200k"
                max-file: "5"

    store:
        container_name: althingi-store
        image: einarvalur/althingi-store:latest
        labels:
            - althingi_service=store
        restart: on-failure
        environment:
            - STORE_DB_USER=root
            - STORE_DB_PASSWORD=example
            - STORE_DB_HOST=store-db
        networks:
            - main-althingi-networks
        depends_on:
            - store-db
        logging:
            driver: "json-file"
            options:
                max-size: "200k"
                max-file: "5"

    store-db:
        container_name: althingi-store-db
        image: mongo:5.0.6-focal
        restart: always
        volumes:
            - store-db-volume:/data/db
        environment:
            - MONGO_INITDB_ROOT_USERNAME=root
            - MONGO_INITDB_ROOT_PASSWORD=example
        networks:
            - main-althingi-networks
        logging:
            driver: "json-file"
            options:
                max-size: "200k"
                max-file: "5"

    client:
        container_name: althingi-client
        image: einarvalur/althingi-client:latest
        labels:
            - co.elastic.logs/module=apache2
            - co.elastic.logs/fileset.stdout=access
            - co.elastic.logs/fileset.stderr=error
            - co.elastic.metrics/module=apache
            - co.elastic.metrics/metricsets=status
            - co.elastic.metrics/hosts='$${data.host}:$${data.port}'
        restart: on-failure
        ports:
            - 80:80
            - 443:443
        networks:
            - main-althingi-networks
        volumes:
            - /var/app/fullchain.pem:/etc/letsencrypt/live/loggjafarthing.einarvalur.co/fullchain.pem
            - /var/app/privkey.pem:/etc/letsencrypt/live/loggjafarthing.einarvalur.co/privkey.pem
            - /var/app/options-ssl-apache.conf:/etc/letsencrypt/options-ssl-apache.conf
            - /etc/ssl/:/etc/ssl/
        depends_on:
            - server
            - thumbor
        logging:
            driver: "json-file"
            options:
                max-size: "200k"
                max-file: "5"

    server:
        container_name: althingi-server
        image: einarvalur/althingi-server:latest
        labels:
            - althingi_service=server
        restart: on-failure
        environment:
            - STORE_URL=http://store:80
            - PORT=3000
        networks:
            - main-althingi-networks
        depends_on:
            - store
        logging:
            driver: "json-file"
            options:
                max-size: "200k"
                max-file: "5"

    messages-store:
        container_name: althingi-messages-store
        image: einarvalur/althingi-messages-store:latest
        labels:
            - althingi_service=messages-source
        environment:
            - QUEUE_HOST=kafka
            - QUEUE_PORT=9092
            - SOURCE_PATH=http://source:80
            - STORE_PATH=http://store:80
        networks:
            - main-althingi-networks
        logging:
            driver: "json-file"
            options:
                max-size: "200k"
                max-file: "5"

    zookeeper:
        container_name: althingi-zookeeper
        image: wurstmeister/zookeeper
        restart: unless-stopped
        ports:
            - "2181:2181"
        networks:
            - main-althingi-networks

    kafka:
        container_name: althingi-kafka
        image: wurstmeister/kafka:2.13-2.8.1
        restart: unless-stopped
        ports:
            - "9092"
        environment:
            # DOCKER_API_VERSION: 1.22
            # KAFKA_CREATE_TOPICS: "test:1:1"
            # KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            # HOSTNAME_COMMAND: "route -n | awk '/UG[ \t]/{print $$2}'"

            KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
            KAFKA_LISTENERS: 'INTERNAL://:9092'
            KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://:9092'
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INTERNAL:PLAINTEXT'
            KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
            KAFKA_CREATE_TOPICS: 'example-topic:1:1'
            KAFKA_ADVERTISED_HOST_NAME: host.docker.internal # change to 172.17.0.1 if running on Ubuntu
            # https://www.architect.io/blog/2021-01-26/kafka-docker-tutorial
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        networks:
            - main-althingi-networks

    aggregator:
        container_name: althingi-aggregator
        image: einarvalur/althingi-aggregator:latest
        labels:
            - althingi_service=aggregator
        restart: "no"
        environment:
            - ENVIRONMENT=PRODUCTION
            - CONSUMER_CACHE_TYPE=memory
            - CONSUMER_CACHE_HOST=aggregator-cache-consumer
            - CONSUMER_CACHE_PORT=6379

            - PROVIDER_CACHE_TYPE=memory
            - PROVIDER_CACHE_HOST=aggregator-cache-provider
            - PROVIDER_CACHE_PORT=6379

            - AGGREGATOR_CONSUMER_SCHEMA=http
            - AGGREGATOR_CONSUMER_HOST=source
            - AGGREGATOR_CONSUMER_PORT=80
        networks:
            - main-althingi-networks
        depends_on:
            - aggregator-cache-consumer
            - aggregator-cache-provider
            - source
        logging:
            driver: "json-file"
            options:
                max-size: "200k"
                max-file: "5"

    aggregator-cache-consumer:
        container_name: althingi-aggregator-cache-consumer
        image: redis:4.0.11
        restart: on-failure
        networks:
            - main-althingi-networks
        logging:
            driver: "json-file"
            options:
                max-size: "200k"
                max-file: "5"

    aggregator-cache-provider:
        container_name: althingi-aggregator-cache-provider
        image: redis:4.0.11
        restart: on-failure
        networks:
            - main-althingi-networks
        logging:
            driver: "json-file"
            options:
                max-size: "200k"
                max-file: "5"

    thumbor:
        container_name: althingi-image-server
        image: minimalcompact/thumbor:7.0.0
        restart: on-failure
        networks:
            - main-althingi-networks
        logging:
            driver: "json-file"
            options:
                max-size: "200k"
                max-file: "5"

    #
    #   Logging and monitoring
    #
    #
    #   These are the systems that deal with collecting and displaying metrics/data.
    #       They can pretty much be started in whatever order, but it would be best to
    #       start them before the System.
    #
    #   You can split it up into services and dashboards.
    #
    #   $ docker-compose up -d elasticsearch  metricbeat filebeat logstash
    #   $ docker-compose up -d kibana kafka-ui
    #
    #
    #
    kafka-ui:
        container_name: althingi-kafka-ui
        image: provectuslabs/kafka-ui:latest
        ports:
            - 8080:8080
        environment:
            - KAFKA_CLUSTERS_0_NAME=local
            - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
        networks:
            - main-althingi-networks

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.13.2
        container_name: althingi-logger-elasticsearch
        restart: on-failure
        environment:
            - bootstrap.memory_lock=true
            - discovery.type=single-node
            - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - elasticsearch-monitor-volume:/usr/share/elasticsearch/data
        networks:
            - main-althingi-networks
        logging:
            driver: "json-file"
            options:
                max-size: "200k"
                max-file: "5"

    kibana:
        image: docker.elastic.co/kibana/kibana:7.13.2
        container_name: althingi-logger-kibana
        restart: on-failure
        environment:
            ELASTICSEARCH_HOSTS: http://elasticsearch:9200
        ports:
            - 8081:5601
        networks:
            - main-althingi-networks
        logging:
            driver: "json-file"
            options:
                max-size: "200k"
                max-file: "5"

    metricbeat:
        image: einarvalur/althingi-monitor-metricbeat:latest
        container_name: althingi-logger-metricbeat
        restart: on-failure
        user: root
        depends_on:
            - elasticsearch
            - kibana
        networks:
            - main-althingi-networks
        environment:
            - "WAIT_FOR_HOSTS=elasticsearch:9200 kibana:5601"
            - "HOST_ELASTICSEARCH=elasticsearch:9200"
            - "HOST_KIBANA=kibana:5601"
            - ELASTICSEARCH_HOSTS=elasticsearch:9200
            # - ELASTICSEARCH_USERNAME
            # - ELASTICSEARCH_PASSWORD
            - MYSQL_HOST=source-db
            - MYSQL_USER=root
            - MYSQL_PASSWORD=example
            - MONGODB_HOST=store-db
            - MONGODB_USER=root
            - MONGODB_PASSWORD=example
            - MONGODB_PORT=27017
            - KAFKA_HOST=kafka
            - KAFKA_PORT=9092
            - CLIENT_HOST=client
            - CLIENT_PORT=80
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
        logging:
            driver: "json-file"
            options:
                max-size: "200k"
                max-file: "5"

    filebeat:
        image: einarvalur/althingi-monitor-filebeat:latest
        container_name: althingi-logger-filebeat
        restart: on-failure
        user: root
        environment:
            - -strict.perms=false
        networks:
            - main-althingi-networks
        volumes:
            - /var/lib/docker/containers:/var/lib/docker/containers:ro
            - /var/run/docker.sock:/var/run/docker.sock:ro
        logging:
            driver: "json-file"
            options:
                max-size: "200k"
                max-file: "5"

    logstash:
        image: einarvalur/althingi-monitor-logstash:latest
        container_name: althingi-logger-logstash
        restart: on-failure
        user: root
        environment:
            - ELASTICSEARCH_HOSTS=elasticsearch:9200
        networks:
            - main-althingi-networks
        logging:
            driver: "json-file"
            options:
                max-size: "200k"
                max-file: "5"

    search-init:
        image: einarvalur/althingi-search-init:latest
        container_name: althingi-logger-search-init
        restart: on-failure
        user: root
        environment:
            - MONITOR_ES=elasticsearch:9200
        networks:
            - main-althingi-networks
        logging:
            driver: "json-file"
            options:
                max-size: "200k"
                max-file: "5"

#
#   Volumes and network
#
volumes:
    source-db-volume:
    store-db-volume:
    elasticsearch-monitor-volume:

networks:
    main-althingi-networks:
